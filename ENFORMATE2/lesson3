1-Сжатие данных без потерь (англ. lossless data compression ) — класс алгоритмов сжатия данных (видео, аудио, графики, документов, представленных в цифровом виде), при использовании которых закодированные данные однозначно могут быть восстановлены с точностью до бита, пикселя, вокселя и т.д. При этом оригинальные данные полностью восстанавливаются из сжатого состояния. Этот тип сжатия принципиально отличается от сжатия данных с потерями. Для каждого из типов цифровой информации, как правило, существуют свои оптимальные алгоритмы сжатия без потерь

2-Степень сжатия информации зависит от нескольких причин: Во-первых, большое значение имеет тип сжимаемых данных. Лучше всего сжимаются графические, текстовые файлы. Для них степень сжатия может быть от пяти до сорока процентов. Хуже сжимаются файлы исполняемых программ, загрузочных модулей, файлы мультимедиа. Во-вторых, большое значение имеет метод сжатия

3-Для решения задачи определим, сколько битов необходимо для кодирования символов, сколько будет занимать заголовок пакета данных и минимальную длину текста, при которой коэффициент сжатия будет больше 1.

1.Для кодирования символов необходимо учитывать количество уникальных символов, которые нужно закодировать. У нас есть 33 заглавные русские буквы, 10 цифр и пробел, итого:

33+10+1=44 символа

Чтобы закодировать 44 символа, нам нужно log2​(44) бит:

log2​(44)≈5.46

Так как каждый символ должен быть представлен целым числом бит, округляем до ближайшего большего целого числа: 6 бита на символ

2.Заголовок пакета данных может включать в себя информацию о:

Длине сообщения

Кодировке

Контрольных данных для проверки ошибок

Размер заголовка пакета данных зависит от протокола передачи. В отсутствие конкретного протокола предположим, что заголовок содержит базовую информацию:

Длина сообщения: если размер сообщения может достигать 2^16 символов, то для длины потребуется 16 бит (2 байта). Кодировка и контрольная информация: например, еще 1 байт. Итого: 16 бит (длина)+8 бит (кодировка и контрольная информация)=24 бита=3 байта

3.Коэффициент сжатия определяется как:

Коэффициент сжатия = Исходный размер ​/ Сжатый размер

Исходный размер текста в однобайтной кодировке:

n символов×8 бит/символ

Сжатый размер текста в 6-битной кодировке:

n символов×6 бит/символ+размер заголовка

4-Кодирование длин серий (англ. Run-length encoding, RLE) или Кодирование повторов — простой алгоритм сжатия данных, который оперирует сериями данных, то есть последовательностями, в которых один и тот же символ встречается несколько раз подряд. При кодировании строка одинаковых символов, составляющих серию, заменяется строкой, которая содержит сам повторяющийся символ и количество его повторов

5-Префиксный код-это тип кодовой системы, отличающийся наличием «свойства префикса», которое требует, чтобы в системе не было целого кодового слова, являющегося префиксом (начальным сегментом) любого другого кодового слова в системе

6-Сжатие с потерями допустимо при сжатии изображений, звука, видео

7-Идея, лежащая в основе всех алгоритмов сжатия с потерями, довольно проста: на первом этапе удалить несущественную информацию, а на втором этапе к оставшимся данным применить наиболее подходящий алгоритм сжатия без потерь. Основные сложности заключаются в выделении этой несущественной информации. Подходы здесь существенно различаются в зависимости от типа сжимаемых данных. Для звука чаще всего удаляют частоты, которые человек просто не способен воспринять, уменьшают частоту дискретизации, а также некоторые алгоритмы удаляют тихие звуки, следующие сразу за громкими, для видеоданных кодируют только движущиеся объекты, а незначительные изменения на неподвижных объектах просто отбрасывают

8-JPEG — Joint Photographic Expert Group — подразделение в рамках ISO — международной организации по стандартизации. В целом алгоритм основан на дискретном косинусном преобразовании (в дальнейшем ДКП), применяемом к матрице изображения для получения некоторой новой матрицы коэффициентов. Для получения исходного изображения применяется обратное преобразование. Для этого используется квантование коэффициентов.

Сжатие с потерями делает файлы меньше, отбрасывает как можно больше данных, чтобы уменьшить размер файлов. Это достигается за счет удаления данных, которые считаются менее заметными, так что сам файл по-прежнему во многом напоминает оригинал. Чем сильнее сжат файл, тем хуже будет качество. Двумя хорошими примерами сжатия с потерями являются изображения JPEG и аудиофайлы MP3

9-Артефакт в языке моделирования UML — некая физическая сущность на уровне платформы реализации, представляющая собой замещаемую часть системы (программный скрипт, файл с исходным кодом, исполняемый модуль, таблица базы данных и т. п.). Многие операционные системы, средства разработки и языки программирования (например Microsoft .NET Framework) имеют встроенные средства поддержки артефактов

10-Алгоритм JPEG наиболее эффективен для сжатия фотографий и картин, содержащих реалистичные сцены с плавными переходами яркости и цвета. Наибольшее распространение JPEG получил в цифровой фотографии и для хранения и передачи изображений с использованием Интернета

11-В формате MP3 используется алгоритм сжатия с потерями, разработанный для существенного уменьшения размера данных, необходимых для воспроизведения записи и обеспечения качества воспроизведения звука, близкого к оригинальному (по мнению большинства слушателей), но с ощутимыми потерями качества при прослушивании на качественной звуковой системе. Принцип сжатия заключается в снижении точности некоторых частей звукового потока, что практически неразличимо для слуха на повсеместно распространённой аппаратуре низкой точности воспроизведения звука (например, доминирующее большинство портативных устройств, звуковых карт, музыкальных центров, автомагнитол и прочей не специальной аппаратуры), а также для людей старшего возраста, в связи с естественными возрастными изменениями слухового аппарата, однако в большинстве случаев чётко различимы на аудиотехнике высокой точности воспроизведения. Данный метод называют перцепционным кодированием. При этом на первом этапе строится диаграмма звука в виде последовательности коротких промежутков времени, затем на ней удаляется информация, не различимая человеческим ухом, а оставшаяся информация сохраняется в компактном виде. Данный подход похож на метод сжатия, используемый при сжатии картинок в формат JPEG. При создании MP3 со средним битрейтом 128 кбит/с в результате получается файл, размер которого примерно равен 1/11 от оригинального файла с CD-Audio (само по себе несжатое аудио формата CD-Audio имеет битрейт 1411,2 кбит/с). MP3-файлы могут создаваться с высоким или низким битрейтом, что влияет на качество файла-результата

12-Битре́йт (от англ. bitrate) — количество бит, используемых для передачи/обработки данных в единицу времени. Битрейт принято использовать при измерении эффективной скорости передачи потока данных по каналу, то есть минимального размера канала, который сможет пропустить этот поток без задержек

13-Качество звука сегодня измеряется в количестве килобайтов звукового потока в секунду (Kbps), иначе говоря, в битрейте. Формат звукового файла, или его расширение, также играет важную роль в качестве звучания

14-AVI (Audio Video Interlive)

Стандарты AVI-файлов

Полные кадры (несжатые)

Кодирование переменной длины (MRLE)

Microsoft Video 1 (MSVC или CRAM)

Intel Real Time Video 2.1 (Indeo 2.1) (RT21)

Intel Indeo 3.1/3.2 (IV31 и IV32)

Cinepak (CVID)

MPEG (Motion Pictures Expert Group)

Motion JPEG или M-JPEG (MJPG)

Editable MPEG (XMPG. MPGI)

и др.